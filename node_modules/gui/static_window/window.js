var _ = require('underscore');
var utils = require('./../utils');
var GuiSlot = require('./../gui_slot');
var EventEmitter = require('events');

function Gui(title, size) {
    EventEmitter.apply(this);
    this._inventory = [];
    this._watchers = [];
    this._title = title || 'GUI';
    this._size = size;
}

Gui.prototype.getInventorySize = function() {
    return this._size || this._inventory.length + 9 - (this._inventory.length & 9);
}

Gui.prototype.setTitle = function(title) {
    this._title = title;
    this.emit('title', title);
}

Gui.prototype.add = function(guiSlot, options, index) {
    if (options) {
        var oldMeta = item.itemMeta;
        oldMeta.displayName = options.name || oldMeta.displayName;
        if (options.lore) {
            if (typeof options.lore === 'string') {
                oldMeta.setLore([ options.lore ]);
            } else if (typeof options.lore === 'function') {
                oldMeta.setLore(options.lore(this, guiSlot));
            } else {
                oldMeta.setLore(options.lore);
            }
        }
        item.itemMeta = oldMeta;
    }
    if (!index) {
        this._inventory.push(guiSlot);
    } else {
        this._inventory[index] = guiSlot;
    }
    this.emit('add', guiSlot);
    return this;
}

Gui.prototype.remove = function(item) {
    var index = -1;
    if (typeof item === 'number') {
        index = item;
    } else {
        index = _.findIndex(function(gs) { return gs.item == item });
    }
    delete this._inventory[index];
    this.emit('remove', index);
}

Gui.prototype.open = function(player) {
    var window = Bukkit.createInventory(null, this.getInventorySize(), this._title);
    for (var i = 0; i < this._inventory.length; ++i) {
        var item = this._inventory[i];
        window.setItem(i, item);
    }

    player.openInventory(window);
    this._watchers.push(player.getUniqueId());
    this.emit('open', this, player);
    return this;
}

Gui.prototype.close = function(player) {
    this._watchers.slice(player.getUniqueId(), 0);
    player.closeInventory();
    this.emit('close', this, player);
    return this;
}

module.exports = Gui;