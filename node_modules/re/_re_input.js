/*

File for RE Input mechanisms. These can be anything that is placeable. 
An RE Input is any block that can receive an RE stream. An example would
be a furnace that runs off of RE as opposed to burnable fuel.

*/

var EventEmitter = require('events');

function REInput(options) {
    options = options || {};
    EventEmitter.call(this);
    this.name = options.name;
    this.minValue = options.minValue || 0;
    this.maxValue = options.maxValue || 10000;
    this.currentValue = options.currentValue || 0;

    this._isInput = true;
}

REInput.prototype.update = function(instance, registry) {
    var block = instance.block, machine = instance.machine;
    if (!block || !machine) return;

    var faces = [ 'up', 'west', 'east', 'north', 'south', 'down' ];
    for (var i = 0; i < faces.length; ++i) {
        var face = faces[i];
        var neighbor = registry.getNeighbor(block, face);
        if (neighbor === null) continue;
        if (neighbor.machine._isOutput) {
            neighbor.machine.outputTo(machine);
        }
    }

    this.emit('update', instance, registry);
}

module.exports = REInput;